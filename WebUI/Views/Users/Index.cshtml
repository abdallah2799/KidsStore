@model IEnumerable<Domain.Entities.User>
@{
    ViewData["Title"] = "User Management";
}

@section Styles {
    <link rel="stylesheet" href="~/css/users.css" />
}

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h2><i class="fas fa-users"></i> User Management</h2>
                    <p class="text-muted">Manage system users and their roles</p>
                </div>
                <button class="btn btn-primary" onclick="showAddUserModal()">
                    <i class="fas fa-plus"></i> Add New User
                </button>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <table class="table table-hover" id="usersTable">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Username</th>
                                <th>Role</th>
                                <th>Status</th>
                                <th>Created Date</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Data loaded via AJAX -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add User Modal -->
<div class="modal fade" id="addUserModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"><i class="fas fa-user-plus"></i> Add New User</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="addUserForm">
                    <div class="mb-3">
                        <label for="addUserName" class="form-label">Username</label>
                        <input type="text" class="form-control" id="addUserName" required>
                        <div class="invalid-feedback" id="addUsernameError"></div>
                    </div>
                    <div class="mb-3">
                        <label for="addPassword" class="form-label">Password</label>
                        <input type="password" class="form-control" id="addPassword" required minlength="6">
                        <small class="text-muted">Minimum 6 characters</small>
                    </div>
                    <div class="mb-3">
                        <label for="addConfirmPassword" class="form-label">Confirm Password</label>
                        <input type="password" class="form-control" id="addConfirmPassword" required>
                        <div class="invalid-feedback" id="addPasswordMatchError"></div>
                    </div>
                    <div class="mb-3">
                        <label for="addRole" class="form-label">Role</label>
                        <select class="form-select" id="addRole" required>
                            <option value="1">Admin</option>
                            <option value="2" selected>Cashier</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="addUser()">
                    <i class="fas fa-save"></i> Create User
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Edit User Modal -->
<div class="modal fade" id="editUserModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"><i class="fas fa-user-edit"></i> Edit User</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="editUserForm">
                    <input type="hidden" id="editUserId">
                    <div class="mb-3">
                        <label for="editUserName" class="form-label">Username</label>
                        <input type="text" class="form-control" id="editUserName" required>
                        <div class="invalid-feedback" id="editUsernameError"></div>
                    </div>
                    <div class="mb-3">
                        <label for="editRole" class="form-label">Role</label>
                        <select class="form-select" id="editRole" required>
                            <option value="1">Admin</option>
                            <option value="2">Cashier</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="editIsActive">
                            <label class="form-check-label" for="editIsActive">
                                Active User
                            </label>
                        </div>
                    </div>
                    <hr>
                    <div class="mb-3">
                        <label for="editNewPassword" class="form-label">New Password (Optional)</label>
                        <input type="password" class="form-control" id="editNewPassword" minlength="6">
                        <small class="text-muted">Leave empty to keep current password. Minimum 6 characters.</small>
                    </div>
                    <div class="mb-3">
                        <label for="editConfirmPassword" class="form-label">Confirm New Password</label>
                        <input type="password" class="form-control" id="editConfirmPassword">
                        <div class="invalid-feedback" id="editPasswordMatchError"></div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="updateUser()">
                    <i class="fas fa-save"></i> Update User
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Delete User Confirmation Modal -->
<div class="modal fade" id="deleteUserModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title"><i class="fas fa-user-times"></i> Deactivate User</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p><i class="fas fa-question-circle text-danger"></i> Are you sure you want to deactivate this user?</p>
                <p class="text-muted mb-0">The user will not be able to log in once deactivated.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" onclick="confirmDeleteUser()">
                    <i class="fas fa-user-times"></i> Yes, Deactivate
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let usersTable;
        let currentDeleteUserId = 0;

        $(document).ready(function() {
            loadUsers();
        });

        function loadUsers() {
            $.get('@Url.Action("GetAllUsers", "Users")', function(response) {
                if (response.success) {
                    const tbody = $('#usersTable tbody');
                    tbody.empty();

                    response.data.forEach(user => {
                        const statusBadge = user.isActive 
                            ? '<span class="badge bg-success">Active</span>' 
                            : '<span class="badge bg-danger">Inactive</span>';
                        
                        const roleBadge = user.role === 'Admin' 
                            ? '<span class="badge badge-role bg-primary">Admin</span>' 
                            : '<span class="badge badge-role bg-info">Cashier</span>';

                        tbody.append(`
                            <tr>
                                <td>${user.id}</td>
                                <td><strong>${user.userName}</strong></td>
                                <td>${roleBadge}</td>
                                <td>${statusBadge}</td>
                                <td>${user.createdAt}</td>
                                <td>
                                    <button class="btn btn-sm btn-warning" onclick="showEditUserModal(${user.id})">
                                        <i class="fas fa-edit"></i> Edit
                                    </button>
                                    <button class="btn btn-sm btn-danger" onclick="deleteUser(${user.id})">
                                        <i class="fas fa-trash"></i> Delete
                                    </button>
                                </td>
                            </tr>
                        `);
                    });
                }
            }).fail(function() {
                toastr.error('Failed to load users');
            });
        }

        function showAddUserModal() {
            $('#addUserForm')[0].reset();
            $('#addUserName').removeClass('is-invalid');
            $('#addConfirmPassword').removeClass('is-invalid');
            $('#addUserModal').modal('show');
        }

        function addUser() {
            const userName = $('#addUserName').val().trim();
            const password = $('#addPassword').val();
            const confirmPassword = $('#addConfirmPassword').val();
            const role = $('#addRole').val();

            // Validation
            if (!userName || !password) {
                toastr.error('Please fill all required fields');
                return;
            }

            if (password.length < 6) {
                toastr.error('Password must be at least 6 characters');
                return;
            }

            if (password !== confirmPassword) {
                $('#addConfirmPassword').addClass('is-invalid');
                $('#addPasswordMatchError').text('Passwords do not match');
                return;
            }

            $.post('@Url.Action("Create", "Users")', {
                userName: userName,
                password: password,
                role: role,
                isActive: true
            }, function(response) {
                if (response.success) {
                    toastr.success(response.message);
                    $('#addUserModal').modal('hide');
                    loadUsers();
                } else {
                    toastr.error(response.message);
                }
            }).fail(function() {
                toastr.error('Failed to create user');
            });
        }

        function showEditUserModal(userId) {
            $.get('@Url.Action("GetUser", "Users")', { id: userId }, function(response) {
                if (response.success) {
                    const user = response.data;
                    $('#editUserId').val(user.id);
                    $('#editUserName').val(user.userName);
                    $('#editRole').val(user.role);
                    $('#editIsActive').prop('checked', user.isActive);
                    $('#editNewPassword').val('');
                    $('#editConfirmPassword').val('');
                    $('#editConfirmPassword').removeClass('is-invalid');
                    $('#editUserModal').modal('show');
                } else {
                    toastr.error(response.message);
                }
            }).fail(function() {
                toastr.error('Failed to load user data');
            });
        }

        function updateUser() {
            const userId = $('#editUserId').val();
            const userName = $('#editUserName').val().trim();
            const role = $('#editRole').val();
            const isActive = $('#editIsActive').is(':checked');
            const newPassword = $('#editNewPassword').val();
            const confirmPassword = $('#editConfirmPassword').val();

            if (!userName) {
                toastr.error('Username is required');
                return;
            }

            // Validate password if provided
            if (newPassword || confirmPassword) {
                if (newPassword.length < 6) {
                    toastr.error('Password must be at least 6 characters');
                    return;
                }

                if (newPassword !== confirmPassword) {
                    $('#editConfirmPassword').addClass('is-invalid');
                    $('#editPasswordMatchError').text('Passwords do not match');
                    toastr.error('Passwords do not match');
                    return;
                }
            }

            $.post('@Url.Action("Edit", "Users")', {
                id: userId,
                userName: userName,
                role: role,
                isActive: isActive,
                newPassword: newPassword
            }, function(response) {
                if (response.success) {
                    toastr.success(response.message);
                    $('#editUserModal').modal('hide');
                    loadUsers();
                } else {
                    toastr.error(response.message);
                }
            }).fail(function() {
                toastr.error('Failed to update user');
            });
        }

        function deleteUser(userId) {
            currentDeleteUserId = userId;
            $('#deleteUserModal').modal('show');
        }

        function confirmDeleteUser() {
            $('#deleteUserModal').modal('hide');
            
            $.post('@Url.Action("Delete", "Users")', { id: currentDeleteUserId }, function(response) {
                if (response.success) {
                    toastr.success(response.message);
                    loadUsers();
                } else {
                    toastr.error(response.message);
                }
                currentDeleteUserId = 0;
            }).fail(function() {
                toastr.error('Failed to delete user');
                currentDeleteUserId = 0;
            });
        }
    </script>
}
