@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Invoices";
}

@section Styles {
    <link href="~/css/sales.css" rel="stylesheet" />
}

<div class="container-fluid py-4" style="max-width:1200px;">
    <h2 class="mb-4" style="color:var(--primary-color);font-weight:700;">Invoices</h2>
    <div class="card shadow-sm" style="border-radius:16px;">
        <div class="p-3">
            <ul class="nav nav-tabs mb-3" id="invoicesTabs" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="sales-invoices-tab" data-bs-toggle="tab" data-bs-target="#sales-invoices" type="button" role="tab">Sales Invoices</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="return-invoices-tab" data-bs-toggle="tab" data-bs-target="#return-invoices" type="button" role="tab">Return Invoices</button>
                </li>
            </ul>
            <div class="tab-content" id="invoicesTabsContent">
                <!-- Sales Invoices Tab -->
                <div class="tab-pane fade show active" id="sales-invoices" role="tabpanel">
                    <div class="row mb-3">
                        <div class="col-md-4">
                            <label class="form-label fw-semibold">Search by Invoice No.</label>
                            <input type="text" class="form-control" id="searchSalesInvoice" placeholder="Enter invoice number...">
                        </div>
                        <div class="col-md-4">
                            <label class="form-label fw-semibold">From Date</label>
                            <input type="date" class="form-control" id="salesDateFrom">
                        </div>
                        <div class="col-md-4">
                            <label class="form-label fw-semibold">To Date</label>
                            <input type="date" class="form-control" id="salesDateTo">
                        </div>
                    </div>
                    <div id="salesInvoiceList">
                        <!-- Sales invoices will be loaded here -->
                    </div>
                </div>
                <!-- Return Invoices Tab -->
                <div class="tab-pane fade" id="return-invoices" role="tabpanel">
                    <div class="row mb-3">
                        <div class="col-md-4">
                            <label class="form-label fw-semibold">Search by Invoice No.</label>
                            <input type="text" class="form-control" id="searchReturnInvoice" placeholder="Enter invoice number...">
                        </div>
                        <div class="col-md-4">
                            <label class="form-label fw-semibold">From Date</label>
                            <input type="date" class="form-control" id="returnDateFrom">
                        </div>
                        <div class="col-md-4">
                            <label class="form-label fw-semibold">To Date</label>
                            <input type="date" class="form-control" id="returnDateTo">
                        </div>
                    </div>
                    <div id="returnInvoiceList">
                        <!-- Return invoices will be loaded here -->
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Invoice Details Modal -->
<div class="modal fade" id="invoiceDetailsModal" tabindex="-1" aria-labelledby="invoiceDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="invoiceDetailsModalLabel">Invoice Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="invoiceDetailsBody">
                <!-- Invoice details will be loaded here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
let salesInvoicesData = [];
let returnInvoicesData = [];

// Sales Invoices Search with date filtering
function loadSalesInvoices() {
    const query = document.getElementById('searchSalesInvoice').value;
    const dateFrom = document.getElementById('salesDateFrom').value;
    const dateTo = document.getElementById('salesDateTo').value;
    
    fetch(`/Sales/SearchSalesInvoices?query=${encodeURIComponent(query)}`)
        .then(res => res.json())
        .then(data => {
            salesInvoicesData = data;
            
            // Filter by date
            let filteredData = data;
            if (dateFrom) {
                filteredData = filteredData.filter(inv => {
                    const invDate = new Date(inv.saleDate);
                    return invDate >= new Date(dateFrom);
                });
            }
            if (dateTo) {
                filteredData = filteredData.filter(inv => {
                    const invDate = new Date(inv.saleDate);
                    return invDate <= new Date(dateTo + 'T23:59:59');
                });
            }
            
            const list = document.getElementById('salesInvoiceList');
            list.innerHTML = filteredData.length === 0 ? '<div class="text-muted">No invoices found.</div>' :
                `<table class='table table-hover table-bordered table-sm'><thead class='table-light'><tr><th>ID</th><th>Date</th><th>Customer</th><th>Total</th><th>Actions</th></tr></thead><tbody>` +
                filteredData.map(inv => `
                    <tr>
                        <td>${inv.id}</td>
                        <td>${new Date(inv.saleDate).toLocaleDateString()}</td>
                        <td>${inv.customerName || '-'}</td>
                        <td>${inv.totalAmount.toFixed(2)} EGP</td>
                        <td>
                            <button class='btn btn-primary btn-sm' onclick='viewSalesInvoice(${inv.id})'>
                                <i class='fas fa-eye'></i> Details
                            </button>
                            <button class='btn btn-success btn-sm' onclick='printSalesInvoice(${inv.id})'>
                                <i class='fas fa-print'></i> Print
                            </button>
                        </td>
                    </tr>`).join('') + '</tbody></table>';
        });
}

// Return Invoices Search with date filtering
function loadReturnInvoices() {
    const query = document.getElementById('searchReturnInvoice').value;
    const dateFrom = document.getElementById('returnDateFrom').value;
    const dateTo = document.getElementById('returnDateTo').value;
    
    fetch(`/Sales/SearchReturnInvoices?query=${encodeURIComponent(query)}`)
        .then(res => res.json())
        .then(data => {
            returnInvoicesData = data;
            
            // Filter by date
            let filteredData = data;
            if (dateFrom) {
                filteredData = filteredData.filter(inv => {
                    const invDate = new Date(inv.returnDate);
                    return invDate >= new Date(dateFrom);
                });
            }
            if (dateTo) {
                filteredData = filteredData.filter(inv => {
                    const invDate = new Date(inv.returnDate);
                    return invDate <= new Date(dateTo + 'T23:59:59');
                });
            }
            
            const list = document.getElementById('returnInvoiceList');
            list.innerHTML = filteredData.length === 0 ? '<div class="text-muted">No return invoices found.</div>' :
                `<table class='table table-hover table-bordered table-sm'><thead class='table-light'><tr><th>ID</th><th>Date</th><th>Total Refund</th><th>Actions</th></tr></thead><tbody>` +
                filteredData.map(inv => `
                    <tr>
                        <td>${inv.id}</td>
                        <td>${new Date(inv.returnDate).toLocaleDateString()}</td>
                        <td>${inv.totalRefund.toFixed(2)} EGP</td>
                        <td>
                            <button class='btn btn-primary btn-sm' onclick='viewReturnInvoice(${inv.id})'>
                                <i class='fas fa-eye'></i> Details
                            </button>
                            <button class='btn btn-success btn-sm' onclick='printReturnInvoice(${inv.id})'>
                                <i class='fas fa-print'></i> Print
                            </button>
                        </td>
                    </tr>`).join('') + '</tbody></table>';
        });
}

// View Sales Invoice Details in Modal
function viewSalesInvoice(id) {
    fetch(`/Sales/GetSalesInvoiceDetails?id=${id}`)
        .then(res => res.json())
        .then(inv => {
            const modalBody = document.getElementById('invoiceDetailsBody');
            modalBody.innerHTML = `
                <div class="row mb-3">
                    <div class="col-md-6">
                        <strong>Invoice #:</strong> ${inv.id}<br>
                        <strong>Date:</strong> ${new Date(inv.saleDate).toLocaleString()}<br>
                        <strong>Customer:</strong> ${inv.customerName || 'N/A'}
                    </div>
                    <div class="col-md-6">
                        <strong>Payment Method:</strong> ${inv.paymentMethod}<br>
                        <strong>Cashier:</strong> ${inv.sellerName}<br>
                        <strong>Total:</strong> <span class="text-success fw-bold">${inv.totalAmount.toFixed(2)} EGP</span>
                    </div>
                </div>
                <h6>Items:</h6>
                <table class="table table-sm table-bordered">
                    <thead class="table-light">
                        <tr>
                            <th>Product</th>
                            <th>Color</th>
                            <th>Size</th>
                            <th>Qty</th>
                            <th>Price</th>
                            <th>Discount</th>
                            <th>Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${inv.items.map(item => {
                            const total = (item.sellingPrice * item.quantity) * (1 - item.discountValue / 100);
                            return `
                                <tr>
                                    <td><strong>${item.productCode}</strong><br><small class="text-muted">${item.productName}</small></td>
                                    <td><span class="color-box d-inline-block" style="width:30px;height:30px;background-color:${item.color};border:1px solid #333;border-radius:4px;"></span></td>
                                    <td>${item.size}</td>
                                    <td>${item.quantity}</td>
                                    <td>${item.sellingPrice.toFixed(2)} EGP</td>
                                    <td>${item.discountValue}%</td>
                                    <td>${total.toFixed(2)} EGP</td>
                                </tr>
                            `;
                        }).join('')}
                    </tbody>
                </table>
            `;
            
            const modal = new bootstrap.Modal(document.getElementById('invoiceDetailsModal'));
            modal.show();
        });
}

// View Return Invoice Details in Modal
function viewReturnInvoice(id) {
    fetch(`/Sales/GetReturnInvoiceDetails?id=${id}`)
        .then(res => res.json())
        .then(inv => {
            const modalBody = document.getElementById('invoiceDetailsBody');
            modalBody.innerHTML = `
                <div class="row mb-3">
                    <div class="col-md-6">
                        <strong>Return Invoice #:</strong> ${inv.id}<br>
                        <strong>Date:</strong> ${new Date(inv.returnDate).toLocaleString()}
                    </div>
                    <div class="col-md-6">
                        <strong>Total Refund:</strong> <span class="text-danger fw-bold">${inv.totalRefund.toFixed(2)} EGP</span>
                    </div>
                </div>
                <h6>Items:</h6>
                <table class="table table-sm table-bordered">
                    <thead class="table-light">
                        <tr>
                            <th>Product</th>
                            <th>Color</th>
                            <th>Size</th>
                            <th>Qty</th>
                            <th>Refund Amount</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${inv.items.map(item => `
                            <tr>
                                <td><strong>${item.productCode}</strong><br><small class="text-muted">${item.productName}</small></td>
                                <td><span class="color-box d-inline-block" style="width:30px;height:30px;background-color:${item.color};border:1px solid #333;border-radius:4px;"></span></td>
                                <td>${item.size}</td>
                                <td>${item.quantity}</td>
                                <td>${item.refundAmount.toFixed(2)} EGP</td>
                            </tr>
                        `).join('')}
                    </tbody>
                </table>
            `;
            
            const modal = new bootstrap.Modal(document.getElementById('invoiceDetailsModal'));
            modal.show();
        });
}

// Print Sales Invoice
function printSalesInvoice(id) {
    window.open(`/Sales/ViewReceipt/${id}`, '_blank', 'width=900,height=700');
}

// Print Return Invoice
function printReturnInvoice(id) {
    window.open(`/Returns/PrintReceipt/${id}`, '_blank', 'width=900,height=700');
}

// Event listeners
document.getElementById('searchSalesInvoice').addEventListener('input', loadSalesInvoices);
document.getElementById('salesDateFrom').addEventListener('change', loadSalesInvoices);
document.getElementById('salesDateTo').addEventListener('change', loadSalesInvoices);

document.getElementById('searchReturnInvoice').addEventListener('input', loadReturnInvoices);
document.getElementById('returnDateFrom').addEventListener('change', loadReturnInvoices);
document.getElementById('returnDateTo').addEventListener('change', loadReturnInvoices);

// Initial load
loadSalesInvoices();
loadReturnInvoices();
</script>
}
